name: generator
on:
  pull_request:
    branches:
      - 'main'
  push:
  workflow_dispatch:

# Default values to simplify job configurations below.
env:
  GO_VERSION: '1.19'
  PY_VERSION: '3.11'

jobs:
  generation:
    runs-on: ubuntu-latest
    name: ${{ matrix.app }}-${{ matrix.lang }}
    strategy:
      fail-fast: false
      matrix:
        lang:
          - go
          - py
        app:
          - sonarr
          - radarr
          - lidarr
          - readarr
          - whisparr
          - prowlarr
        include:
          - app: sonarr
            swagger: https://raw.githubusercontent.com/Sonarr/Sonarr/60f18249b05daa20523542beef54bc126d963d1e/src/Sonarr.Api.V3/openapi.json
          - app: radarr
            swagger: https://raw.githubusercontent.com/Radarr/Radarr/3244282a838f7dc63d744653caebec0e9f02e8d3/src/Radarr.Api.V3/openapi.json
          - app: lidarr
            swagger: https://raw.githubusercontent.com/Lidarr/Lidarr/197a59639bbdabeb91d7b7274ae4cf72e8f393a2/src/Lidarr.Api.V1/openapi.json
          - app: readarr
            swagger: https://raw.githubusercontent.com/Readarr/Readarr/9fe08429bc73b60b2ea608613e22eba5df1617de/src/Readarr.Api.V1/openapi.json
          - app: whisparr
            # swagger: https://raw.githubusercontent.com/Whisparr/Whisparr/8d94dce15d5585a3b83aeb5a807ac144118cbdb5/src/Whisparr.Api.V3/openapi.json
            swagger: https://raw.githubusercontent.com/Radarr/Radarr/3244282a838f7dc63d744653caebec0e9f02e8d3/src/Radarr.Api.V3/openapi.json
          - app: prowlarr
            swagger: https://raw.githubusercontent.com/Prowlarr/Prowlarr/9adbfd23911e4840c718decf66fb4894439ddc2b/src/Prowlarr.Api.V1/openapi.json

    steps:
      - name: DevOpsArrBOT token
        id: DevOpsArrBOT
        uses: getsentry/action-github-app-token@v2
        with:
          app_id: '305652'
          private_key: ${{ secrets.DEVOPSARRBOT_PRIVATE_KEY }}

      - name: set DevOpsArrBOT config
        run: |
          git config --global user.name "devopsarr[bot]"
          git config --global user.email 127950054+devopsarr[bot]@users.noreply.github.com

      - name: Check out code
        uses: actions/checkout@v4

      - name: Checkout sdk
        uses: actions/checkout@v4
        with:
          repository: devopsarr/${{ matrix.app }}-${{ matrix.lang }}
          path: .generated-code/${{ matrix.app }}-${{ matrix.lang }}
          fetch-depth: 0
          token: ${{ steps.DevOpsArrBOT.outputs.token }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PY_VERSION }}

      - name: Set up Golang
        if: ${{ matrix.lang == 'go' }}
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Git Version
        run: |
          tag=$(git describe --tags --abbrev=0) &&\
          echo "version=${tag:1}" >> $GITHUB_OUTPUT
        id: version
        working-directory: .generated-code/${{ matrix.app }}-${{ matrix.lang }}

      - name: generation
        run: |
          make generate
        env:
          APP: ${{ matrix.app }}
          SDK: ${{ matrix.lang }}
          URL: ${{ matrix.swagger }}
          VERSION: ${{ steps.version.outputs.version }}

      - name: diff
        id: diff
        run: |
          git diff --exit-code ||\
          echo "create-pr=true" >> $GITHUB_OUTPUT
        working-directory: .generated-code/${{ matrix.app }}-${{ matrix.lang }}

      - name: create commit
        if: ${{ github.event_name == 'pull_request' && steps.diff.outputs.create-pr == 'true'}}
        run: |
          git checkout -b feature/code-generation &&\
          git add . &&\
          git commit -m "${{ github.event.pull_request.title }}" &&\
          git push --set-upstream origin feature/code-generation -f
        working-directory: .generated-code/${{ matrix.app }}-${{ matrix.lang }}

      - name: create pull request
        if: ${{ steps.diff.outputs.create-pr == 'true' && github.event_name != 'push' }}
        run: gh pr create -H feature/code-generation -B main --title '${{ github.event.pull_request.title }}' --body 'Code generated' || echo 'PR already created'
        working-directory: .generated-code/${{ matrix.app }}-${{ matrix.lang }}
        env:
          GITHUB_TOKEN: ${{ steps.DevOpsArrBOT.outputs.token }}
      
      - name: merge pull request
        if: ${{ steps.diff.outputs.create-pr == 'true' && github.event_name == 'push' && github.ref_name == 'main' }}
        run: gh pr merge feature/code-generation --merge
        working-directory: .generated-code/${{ matrix.app }}-${{ matrix.lang }}
        env:
          GITHUB_TOKEN: ${{ steps.DevOpsArrBOT.outputs.token }}